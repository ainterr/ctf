
3d726802521a9ce2b24e2c3baf039915e48ad056:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 3f                	add    %bh,(%edi)
 8048199:	b9 01 4d 54 9e       	mov    $0x9e544d01,%ecx
 804819e:	fe 4c e7 61          	decb   0x61(%edi,%eiz,8)
 80481a2:	14 6b                	adc    $0x6b,%al
 80481a4:	73 65                	jae    804820b <_init-0x1a9>
 80481a6:	90                   	nop
 80481a7:	eb 9f                	jmp    8048148 <_init-0x26c>
 80481a9:	7e 28                	jle    80481d3 <_init-0x1e1>
 80481ab:	1d                   	.byte 0x1d

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	09 00                	or     %eax,(%eax)
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	23 00                	and    (%eax),%eax
 80481bf:	20 09                	and    %cl,(%ecx)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0a                	add    %cl,(%edx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00 29                	add    %ch,(%ecx)
 80481c9:	1d 8c 1c ad 4b       	sbb    $0x4bad1c8c,%eax
 80481ce:	e3 c0                	jecxz  8048190 <_init-0x224>

Disassembly of section .dynsym:

080481d0 <.dynsym>:
	...
 80481e0:	1a 00                	sbb    (%eax),%al
	...
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	12 00                	adc    (%eax),%al
 80481ee:	00 00                	add    %al,(%eax)
 80481f0:	3b 00                	cmp    (%eax),%eax
	...
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	12 00                	adc    (%eax),%al
 80481fe:	00 00                	add    %al,(%eax)
 8048200:	48                   	dec    %eax
	...
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 12                	add    %dl,(%edx)
 804820d:	00 00                	add    %al,(%eax)
 804820f:	00 36                	add    %dh,(%esi)
	...
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 12                	add    %dl,(%edx)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 61 00             	add    %ah,0x0(%ecx)
	...
 804822a:	00 00                	add    %al,(%eax)
 804822c:	20 00                	and    %al,(%eax)
 804822e:	00 00                	add    %al,(%eax)
 8048230:	4f                   	dec    %edi
	...
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 12                	add    %dl,(%edx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 21                	add    %ah,(%ecx)
	...
 8048249:	00 00                	add    %al,(%eax)
 804824b:	00 12                	add    %dl,(%edx)
 804824d:	00 00                	add    %al,(%eax)
 804824f:	00 27                	add    %ah,(%edi)
	...
 8048259:	00 00                	add    %al,(%eax)
 804825b:	00 12                	add    %dl,(%edx)
 804825d:	00 00                	add    %al,(%eax)
 804825f:	00 41 00             	add    %al,0x0(%ecx)
 8048262:	00 00                	add    %al,(%eax)
 8048264:	40                   	inc    %eax
 8048265:	a0 04 08 04 00       	mov    0x40804,%al
 804826a:	00 00                	add    %al,(%eax)
 804826c:	11 00                	adc    %eax,(%eax)
 804826e:	19 00                	sbb    %eax,(%eax)
 8048270:	0b 00                	or     (%eax),%eax
 8048272:	00 00                	add    %al,(%eax)
 8048274:	9c                   	pushf  
 8048275:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8048278:	04 00                	add    $0x0,%al
 804827a:	00 00                	add    %al,(%eax)
 804827c:	11 00                	adc    %eax,(%eax)
 804827e:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

08048280 <.dynstr>:
 8048280:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048284:	63 2e                	arpl   %bp,(%esi)
 8048286:	73 6f                	jae    80482f7 <_init-0xbd>
 8048288:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 804828d:	4f                   	dec    %edi
 804828e:	5f                   	pop    %edi
 804828f:	73 74                	jae    8048305 <_init-0xaf>
 8048291:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048298:	64 
 8048299:	00 66 66             	add    %ah,0x66(%esi)
 804829c:	6c                   	insb   (%dx),%es:(%edi)
 804829d:	75 73                	jne    8048312 <_init-0xa2>
 804829f:	68 00 66 6f 70       	push   $0x706f6600
 80482a4:	65 6e                	outsb  %gs:(%esi),(%dx)
 80482a6:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482a9:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%ebx),%esi
 80482b0:	73 63                	jae    8048315 <_init-0x9f>
 80482b2:	61                   	popa   
 80482b3:	6e                   	outsb  %ds:(%esi),(%dx)
 80482b4:	66                   	data16
 80482b5:	00 70 75             	add    %dh,0x75(%eax)
 80482b8:	74 73                	je     804832d <_init-0x87>
 80482ba:	00 66 67             	add    %ah,0x67(%esi)
 80482bd:	65                   	gs
 80482be:	74 73                	je     8048333 <_init-0x81>
 80482c0:	00 73 74             	add    %dh,0x74(%ebx)
 80482c3:	64 6f                	outsl  %fs:(%esi),(%dx)
 80482c5:	75 74                	jne    804833b <_init-0x79>
 80482c7:	00 66 63             	add    %ah,0x63(%esi)
 80482ca:	6c                   	insb   (%dx),%es:(%edi)
 80482cb:	6f                   	outsl  %ds:(%esi),(%dx)
 80482cc:	73 65                	jae    8048333 <_init-0x81>
 80482ce:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482d1:	6c                   	insb   (%dx),%es:(%edi)
 80482d2:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80482d9:	72 74                	jb     804834f <_init-0x65>
 80482db:	5f                   	pop    %edi
 80482dc:	6d                   	insl   (%dx),%es:(%edi)
 80482dd:	61                   	popa   
 80482de:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 80482e5:	6f                   	outsl  %ds:(%esi),(%dx)
 80482e6:	6e                   	outsb  %ds:(%esi),(%dx)
 80482e7:	5f                   	pop    %edi
 80482e8:	73 74                	jae    804835e <_init-0x56>
 80482ea:	61                   	popa   
 80482eb:	72 74                	jb     8048361 <_init-0x53>
 80482ed:	5f                   	pop    %edi
 80482ee:	5f                   	pop    %edi
 80482ef:	00 47 4c             	add    %al,0x4c(%edi)
 80482f2:	49                   	dec    %ecx
 80482f3:	42                   	inc    %edx
 80482f4:	43                   	inc    %ebx
 80482f5:	5f                   	pop    %edi
 80482f6:	32 2e                	xor    (%esi),%ch
 80482f8:	37                   	aaa    
 80482f9:	00 47 4c             	add    %al,0x4c(%edi)
 80482fc:	49                   	dec    %ecx
 80482fd:	42                   	inc    %edx
 80482fe:	43                   	inc    %ebx
 80482ff:	5f                   	pop    %edi
 8048300:	32 2e                	xor    (%esi),%ch
 8048302:	31 00                	xor    %eax,(%eax)
 8048304:	47                   	inc    %edi
 8048305:	4c                   	dec    %esp
 8048306:	49                   	dec    %ecx
 8048307:	42                   	inc    %edx
 8048308:	43                   	inc    %ebx
 8048309:	5f                   	pop    %edi
 804830a:	32 2e                	xor    (%esi),%ch
 804830c:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

0804830e <.gnu.version>:
 804830e:	00 00                	add    %al,(%eax)
 8048310:	02 00                	add    (%eax),%al
 8048312:	02 00                	add    (%eax),%al
 8048314:	03 00                	add    (%eax),%eax
 8048316:	02 00                	add    (%eax),%al
 8048318:	00 00                	add    %al,(%eax)
 804831a:	02 00                	add    (%eax),%al
 804831c:	03 00                	add    (%eax),%eax
 804831e:	04 00                	add    $0x0,%al
 8048320:	02 00                	add    (%eax),%al
 8048322:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048324 <.gnu.version_r>:
 8048324:	01 00                	add    %eax,(%eax)
 8048326:	03 00                	add    (%eax),%eax
 8048328:	01 00                	add    %eax,(%eax)
 804832a:	00 00                	add    %al,(%eax)
 804832c:	10 00                	adc    %al,(%eax)
 804832e:	00 00                	add    %al,(%eax)
 8048330:	00 00                	add    %al,(%eax)
 8048332:	00 00                	add    %al,(%eax)
 8048334:	17                   	pop    %ss
 8048335:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%ecx),%ebp
 804833c:	70 00                	jo     804833e <_init-0x76>
 804833e:	00 00                	add    %al,(%eax)
 8048340:	10 00                	adc    %al,(%eax)
 8048342:	00 00                	add    %al,(%eax)
 8048344:	11 69 69             	adc    %ebp,0x69(%ecx)
 8048347:	0d 00 00 03 00       	or     $0x30000,%eax
 804834c:	7a 00                	jp     804834e <_init-0x66>
 804834e:	00 00                	add    %al,(%eax)
 8048350:	10 00                	adc    %al,(%eax)
 8048352:	00 00                	add    %al,(%eax)
 8048354:	10 69 69             	adc    %ch,0x69(%ecx)
 8048357:	0d 00 00 02 00       	or     $0x20000,%eax
 804835c:	84 00                	test   %al,(%eax)
 804835e:	00 00                	add    %al,(%eax)
 8048360:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048364 <.rel.dyn>:
 8048364:	fc                   	cld    
 8048365:	9f                   	lahf   
 8048366:	04 08                	add    $0x8,%al
 8048368:	06                   	push   %es
 8048369:	05 00 00 40 a0       	add    $0xa0400000,%eax
 804836e:	04 08                	add    $0x8,%al
 8048370:	05                   	.byte 0x5
 8048371:	09 00                	or     %eax,(%eax)
	...

Disassembly of section .rel.plt:

08048374 <.rel.plt>:
 8048374:	0c a0                	or     $0xa0,%al
 8048376:	04 08                	add    $0x8,%al
 8048378:	07                   	pop    %es
 8048379:	01 00                	add    %eax,(%eax)
 804837b:	00 10                	add    %dl,(%eax)
 804837d:	a0 04 08 07 02       	mov    0x2070804,%al
 8048382:	00 00                	add    %al,(%eax)
 8048384:	14 a0                	adc    $0xa0,%al
 8048386:	04 08                	add    $0x8,%al
 8048388:	07                   	pop    %es
 8048389:	03 00                	add    (%eax),%eax
 804838b:	00 18                	add    %bl,(%eax)
 804838d:	a0 04 08 07 04       	mov    0x4070804,%al
 8048392:	00 00                	add    %al,(%eax)
 8048394:	1c a0                	sbb    $0xa0,%al
 8048396:	04 08                	add    $0x8,%al
 8048398:	07                   	pop    %es
 8048399:	05 00 00 20 a0       	add    $0xa0200000,%eax
 804839e:	04 08                	add    $0x8,%al
 80483a0:	07                   	pop    %es
 80483a1:	06                   	push   %es
 80483a2:	00 00                	add    %al,(%eax)
 80483a4:	24 a0                	and    $0xa0,%al
 80483a6:	04 08                	add    $0x8,%al
 80483a8:	07                   	pop    %es
 80483a9:	07                   	pop    %es
 80483aa:	00 00                	add    %al,(%eax)
 80483ac:	28 a0 04 08 07 08    	sub    %ah,0x8070804(%eax)
	...

Disassembly of section .init:

080483b4 <_init>:
 80483b4:	53                   	push   %ebx
 80483b5:	83 ec 08             	sub    $0x8,%esp
 80483b8:	e8 e3 00 00 00       	call   80484a0 <__x86.get_pc_thunk.bx>
 80483bd:	81 c3 43 1c 00 00    	add    $0x1c43,%ebx
 80483c3:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80483c9:	85 c0                	test   %eax,%eax
 80483cb:	74 05                	je     80483d2 <_init+0x1e>
 80483cd:	e8 5e 00 00 00       	call   8048430 <__gmon_start__@plt>
 80483d2:	83 c4 08             	add    $0x8,%esp
 80483d5:	5b                   	pop    %ebx
 80483d6:	c3                   	ret    

Disassembly of section .plt:

080483e0 <fflush@plt-0x10>:
 80483e0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483e6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483ec:	00 00                	add    %al,(%eax)
	...

080483f0 <fflush@plt>:
 80483f0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483f6:	68 00 00 00 00       	push   $0x0
 80483fb:	e9 e0 ff ff ff       	jmp    80483e0 <_init+0x2c>

08048400 <fgets@plt>:
 8048400:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048406:	68 08 00 00 00       	push   $0x8
 804840b:	e9 d0 ff ff ff       	jmp    80483e0 <_init+0x2c>

08048410 <fclose@plt>:
 8048410:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048416:	68 10 00 00 00       	push   $0x10
 804841b:	e9 c0 ff ff ff       	jmp    80483e0 <_init+0x2c>

08048420 <puts@plt>:
 8048420:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048426:	68 18 00 00 00       	push   $0x18
 804842b:	e9 b0 ff ff ff       	jmp    80483e0 <_init+0x2c>

08048430 <__gmon_start__@plt>:
 8048430:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048436:	68 20 00 00 00       	push   $0x20
 804843b:	e9 a0 ff ff ff       	jmp    80483e0 <_init+0x2c>

08048440 <__libc_start_main@plt>:
 8048440:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048446:	68 28 00 00 00       	push   $0x28
 804844b:	e9 90 ff ff ff       	jmp    80483e0 <_init+0x2c>

08048450 <fopen@plt>:
 8048450:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048456:	68 30 00 00 00       	push   $0x30
 804845b:	e9 80 ff ff ff       	jmp    80483e0 <_init+0x2c>

08048460 <__isoc99_scanf@plt>:
 8048460:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048466:	68 38 00 00 00       	push   $0x38
 804846b:	e9 70 ff ff ff       	jmp    80483e0 <_init+0x2c>

Disassembly of section .text:

08048470 <_start>:
 8048470:	31 ed                	xor    %ebp,%ebp
 8048472:	5e                   	pop    %esi
 8048473:	89 e1                	mov    %esp,%ecx
 8048475:	83 e4 f0             	and    $0xfffffff0,%esp
 8048478:	50                   	push   %eax
 8048479:	54                   	push   %esp
 804847a:	52                   	push   %edx
 804847b:	68 80 86 04 08       	push   $0x8048680
 8048480:	68 10 86 04 08       	push   $0x8048610
 8048485:	51                   	push   %ecx
 8048486:	56                   	push   %esi
 8048487:	68 c9 85 04 08       	push   $0x80485c9
 804848c:	e8 af ff ff ff       	call   8048440 <__libc_start_main@plt>
 8048491:	f4                   	hlt    
 8048492:	66 90                	xchg   %ax,%ax
 8048494:	66 90                	xchg   %ax,%ax
 8048496:	66 90                	xchg   %ax,%ax
 8048498:	66 90                	xchg   %ax,%ax
 804849a:	66 90                	xchg   %ax,%ax
 804849c:	66 90                	xchg   %ax,%ax
 804849e:	66 90                	xchg   %ax,%ax

080484a0 <__x86.get_pc_thunk.bx>:
 80484a0:	8b 1c 24             	mov    (%esp),%ebx
 80484a3:	c3                   	ret    
 80484a4:	66 90                	xchg   %ax,%ax
 80484a6:	66 90                	xchg   %ax,%ax
 80484a8:	66 90                	xchg   %ax,%ax
 80484aa:	66 90                	xchg   %ax,%ax
 80484ac:	66 90                	xchg   %ax,%ax
 80484ae:	66 90                	xchg   %ax,%ax

080484b0 <deregister_tm_clones>:
 80484b0:	b8 37 a0 04 08       	mov    $0x804a037,%eax
 80484b5:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 80484ba:	83 f8 06             	cmp    $0x6,%eax
 80484bd:	77 01                	ja     80484c0 <deregister_tm_clones+0x10>
 80484bf:	c3                   	ret    
 80484c0:	b8 00 00 00 00       	mov    $0x0,%eax
 80484c5:	85 c0                	test   %eax,%eax
 80484c7:	74 f6                	je     80484bf <deregister_tm_clones+0xf>
 80484c9:	55                   	push   %ebp
 80484ca:	89 e5                	mov    %esp,%ebp
 80484cc:	83 ec 18             	sub    $0x18,%esp
 80484cf:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 80484d6:	ff d0                	call   *%eax
 80484d8:	c9                   	leave  
 80484d9:	c3                   	ret    
 80484da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080484e0 <register_tm_clones>:
 80484e0:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 80484e5:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 80484ea:	c1 f8 02             	sar    $0x2,%eax
 80484ed:	89 c2                	mov    %eax,%edx
 80484ef:	c1 ea 1f             	shr    $0x1f,%edx
 80484f2:	01 d0                	add    %edx,%eax
 80484f4:	d1 f8                	sar    %eax
 80484f6:	75 01                	jne    80484f9 <register_tm_clones+0x19>
 80484f8:	c3                   	ret    
 80484f9:	ba 00 00 00 00       	mov    $0x0,%edx
 80484fe:	85 d2                	test   %edx,%edx
 8048500:	74 f6                	je     80484f8 <register_tm_clones+0x18>
 8048502:	55                   	push   %ebp
 8048503:	89 e5                	mov    %esp,%ebp
 8048505:	83 ec 18             	sub    $0x18,%esp
 8048508:	89 44 24 04          	mov    %eax,0x4(%esp)
 804850c:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048513:	ff d2                	call   *%edx
 8048515:	c9                   	leave  
 8048516:	c3                   	ret    
 8048517:	89 f6                	mov    %esi,%esi
 8048519:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048520 <__do_global_dtors_aux>:
 8048520:	80 3d 44 a0 04 08 00 	cmpb   $0x0,0x804a044
 8048527:	75 13                	jne    804853c <__do_global_dtors_aux+0x1c>
 8048529:	55                   	push   %ebp
 804852a:	89 e5                	mov    %esp,%ebp
 804852c:	83 ec 08             	sub    $0x8,%esp
 804852f:	e8 7c ff ff ff       	call   80484b0 <deregister_tm_clones>
 8048534:	c6 05 44 a0 04 08 01 	movb   $0x1,0x804a044
 804853b:	c9                   	leave  
 804853c:	f3 c3                	repz ret 
 804853e:	66 90                	xchg   %ax,%ax

08048540 <frame_dummy>:
 8048540:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048545:	85 c0                	test   %eax,%eax
 8048547:	74 1f                	je     8048568 <frame_dummy+0x28>
 8048549:	b8 00 00 00 00       	mov    $0x0,%eax
 804854e:	85 c0                	test   %eax,%eax
 8048550:	74 16                	je     8048568 <frame_dummy+0x28>
 8048552:	55                   	push   %ebp
 8048553:	89 e5                	mov    %esp,%ebp
 8048555:	83 ec 18             	sub    $0x18,%esp
 8048558:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804855f:	ff d0                	call   *%eax
 8048561:	c9                   	leave  
 8048562:	e9 79 ff ff ff       	jmp    80484e0 <register_tm_clones>
 8048567:	90                   	nop
 8048568:	e9 73 ff ff ff       	jmp    80484e0 <register_tm_clones>

0804856d <printFlag>:
 804856d:	55                   	push   %ebp
 804856e:	89 e5                	mov    %esp,%ebp
 8048570:	83 ec 58             	sub    $0x58,%esp
 8048573:	c7 44 24 04 a0 86 04 	movl   $0x80486a0,0x4(%esp)
 804857a:	08 
 804857b:	c7 04 24 a2 86 04 08 	movl   $0x80486a2,(%esp)
 8048582:	e8 c9 fe ff ff       	call   8048450 <fopen@plt>
 8048587:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804858a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804858d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048591:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)
 8048598:	00 
 8048599:	8d 45 c2             	lea    -0x3e(%ebp),%eax
 804859c:	89 04 24             	mov    %eax,(%esp)
 804859f:	e8 5c fe ff ff       	call   8048400 <fgets@plt>
 80485a4:	8d 45 c2             	lea    -0x3e(%ebp),%eax
 80485a7:	89 04 24             	mov    %eax,(%esp)
 80485aa:	e8 71 fe ff ff       	call   8048420 <puts@plt>
 80485af:	a1 40 a0 04 08       	mov    0x804a040,%eax
 80485b4:	89 04 24             	mov    %eax,(%esp)
 80485b7:	e8 34 fe ff ff       	call   80483f0 <fflush@plt>
 80485bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80485bf:	89 04 24             	mov    %eax,(%esp)
 80485c2:	e8 49 fe ff ff       	call   8048410 <fclose@plt>
 80485c7:	c9                   	leave  
 80485c8:	c3                   	ret    

080485c9 <main>:
 80485c9:	55                   	push   %ebp
 80485ca:	89 e5                	mov    %esp,%ebp
 80485cc:	83 e4 f0             	and    $0xfffffff0,%esp
 80485cf:	83 ec 20             	sub    $0x20,%esp
 80485d2:	c7 04 24 ac 86 04 08 	movl   $0x80486ac,(%esp)
 80485d9:	e8 42 fe ff ff       	call   8048420 <puts@plt>
 80485de:	8d 44 24 14          	lea    0x14(%esp),%eax
 80485e2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485e6:	c7 04 24 d8 86 04 08 	movl   $0x80486d8,(%esp)
 80485ed:	e8 6e fe ff ff       	call   8048460 <__isoc99_scanf@plt>
 80485f2:	c7 04 24 db 86 04 08 	movl   $0x80486db,(%esp)
 80485f9:	e8 22 fe ff ff       	call   8048420 <puts@plt>
 80485fe:	b8 00 00 00 00       	mov    $0x0,%eax
 8048603:	c9                   	leave  
 8048604:	c3                   	ret    
 8048605:	66 90                	xchg   %ax,%ax
 8048607:	66 90                	xchg   %ax,%ax
 8048609:	66 90                	xchg   %ax,%ax
 804860b:	66 90                	xchg   %ax,%ax
 804860d:	66 90                	xchg   %ax,%ax
 804860f:	90                   	nop

08048610 <__libc_csu_init>:
 8048610:	55                   	push   %ebp
 8048611:	57                   	push   %edi
 8048612:	31 ff                	xor    %edi,%edi
 8048614:	56                   	push   %esi
 8048615:	53                   	push   %ebx
 8048616:	e8 85 fe ff ff       	call   80484a0 <__x86.get_pc_thunk.bx>
 804861b:	81 c3 e5 19 00 00    	add    $0x19e5,%ebx
 8048621:	83 ec 1c             	sub    $0x1c,%esp
 8048624:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048628:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804862e:	e8 81 fd ff ff       	call   80483b4 <_init>
 8048633:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048639:	29 c6                	sub    %eax,%esi
 804863b:	c1 fe 02             	sar    $0x2,%esi
 804863e:	85 f6                	test   %esi,%esi
 8048640:	74 27                	je     8048669 <__libc_csu_init+0x59>
 8048642:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048648:	8b 44 24 38          	mov    0x38(%esp),%eax
 804864c:	89 2c 24             	mov    %ebp,(%esp)
 804864f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048653:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048657:	89 44 24 04          	mov    %eax,0x4(%esp)
 804865b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048662:	83 c7 01             	add    $0x1,%edi
 8048665:	39 f7                	cmp    %esi,%edi
 8048667:	75 df                	jne    8048648 <__libc_csu_init+0x38>
 8048669:	83 c4 1c             	add    $0x1c,%esp
 804866c:	5b                   	pop    %ebx
 804866d:	5e                   	pop    %esi
 804866e:	5f                   	pop    %edi
 804866f:	5d                   	pop    %ebp
 8048670:	c3                   	ret    
 8048671:	eb 0d                	jmp    8048680 <__libc_csu_fini>
 8048673:	90                   	nop
 8048674:	90                   	nop
 8048675:	90                   	nop
 8048676:	90                   	nop
 8048677:	90                   	nop
 8048678:	90                   	nop
 8048679:	90                   	nop
 804867a:	90                   	nop
 804867b:	90                   	nop
 804867c:	90                   	nop
 804867d:	90                   	nop
 804867e:	90                   	nop
 804867f:	90                   	nop

08048680 <__libc_csu_fini>:
 8048680:	f3 c3                	repz ret 

Disassembly of section .fini:

08048684 <_fini>:
 8048684:	53                   	push   %ebx
 8048685:	83 ec 08             	sub    $0x8,%esp
 8048688:	e8 13 fe ff ff       	call   80484a0 <__x86.get_pc_thunk.bx>
 804868d:	81 c3 73 19 00 00    	add    $0x1973,%ebx
 8048693:	83 c4 08             	add    $0x8,%esp
 8048696:	5b                   	pop    %ebx
 8048697:	c3                   	ret    

Disassembly of section .rodata:

08048698 <_fp_hw>:
 8048698:	03 00                	add    (%eax),%eax
	...

0804869c <_IO_stdin_used>:
 804869c:	01 00                	add    %eax,(%eax)
 804869e:	02 00                	add    (%eax),%al
 80486a0:	72 00                	jb     80486a2 <_IO_stdin_used+0x6>
 80486a2:	66                   	data16
 80486a3:	6c                   	insb   (%dx),%es:(%edi)
 80486a4:	61                   	popa   
 80486a5:	67 2e 74 78          	addr16 je,pn 8048721 <_IO_stdin_used+0x85>
 80486a9:	74 00                	je     80486ab <_IO_stdin_used+0xf>
 80486ab:	00 54 68 69          	add    %dl,0x69(%eax,%ebp,2)
 80486af:	73 20                	jae    80486d1 <_IO_stdin_used+0x35>
 80486b1:	70 72                	jo     8048725 <_IO_stdin_used+0x89>
 80486b3:	6f                   	outsl  %ds:(%esi),(%dx)
 80486b4:	67 72 61             	addr16 jb 8048718 <_IO_stdin_used+0x7c>
 80486b7:	6d                   	insl   (%dx),%es:(%edi)
 80486b8:	20 69 73             	and    %ch,0x73(%ecx)
 80486bb:	20 68 75             	and    %ch,0x75(%eax)
 80486be:	6e                   	outsb  %ds:(%esi),(%dx)
 80486bf:	67 72 79             	addr16 jb 804873b <_IO_stdin_used+0x9f>
 80486c2:	2e 20 59 6f          	and    %bl,%cs:0x6f(%ecx)
 80486c6:	75 20                	jne    80486e8 <_IO_stdin_used+0x4c>
 80486c8:	73 68                	jae    8048732 <_IO_stdin_used+0x96>
 80486ca:	6f                   	outsl  %ds:(%esi),(%dx)
 80486cb:	75 6c                	jne    8048739 <_IO_stdin_used+0x9d>
 80486cd:	64 20 66 65          	and    %ah,%fs:0x65(%esi)
 80486d1:	65 64 20 69 74       	gs and %ch,%fs:%gs:0x74(%ecx)
 80486d6:	2e 00 25 73 00 44 6f 	add    %ah,%cs:0x6f440073
 80486dd:	20 79 6f             	and    %bh,0x6f(%ecx)
 80486e0:	75 20                	jne    8048702 <_IO_stdin_used+0x66>
 80486e2:	66                   	data16
 80486e3:	65                   	gs
 80486e4:	65                   	gs
 80486e5:	6c                   	insb   (%dx),%es:(%edi)
 80486e6:	20 74 68 65          	and    %dh,0x65(%eax,%ebp,2)
 80486ea:	20 66 6c             	and    %ah,0x6c(%esi)
 80486ed:	6f                   	outsl  %ds:(%esi),(%dx)
 80486ee:	77 3f                	ja     804872f <_IO_stdin_used+0x93>
	...

Disassembly of section .eh_frame_hdr:

080486f4 <.eh_frame_hdr>:
 80486f4:	01 1b                	add    %ebx,(%ebx)
 80486f6:	03 3b                	add    (%ebx),%edi
 80486f8:	30 00                	xor    %al,(%eax)
 80486fa:	00 00                	add    %al,(%eax)
 80486fc:	05 00 00 00 ec       	add    $0xec000000,%eax
 8048701:	fc                   	cld    
 8048702:	ff                   	(bad)  
 8048703:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 8048707:	00 79 fe             	add    %bh,-0x2(%ecx)
 804870a:	ff                   	(bad)  
 804870b:	ff 70 00             	pushl  0x0(%eax)
 804870e:	00 00                	add    %al,(%eax)
 8048710:	d5 fe                	aad    $0xfe
 8048712:	ff                   	(bad)  
 8048713:	ff 90 00 00 00 1c    	call   *0x1c000000(%eax)
 8048719:	ff                   	(bad)  
 804871a:	ff                   	(bad)  
 804871b:	ff b0 00 00 00 8c    	pushl  -0x74000000(%eax)
 8048721:	ff                   	(bad)  
 8048722:	ff                   	(bad)  
 8048723:	ff                   	(bad)  
 8048724:	ec                   	in     (%dx),%al
 8048725:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048728 <__FRAME_END__-0xcc>:
 8048728:	14 00                	adc    $0x0,%al
 804872a:	00 00                	add    %al,(%eax)
 804872c:	00 00                	add    %al,(%eax)
 804872e:	00 00                	add    %al,(%eax)
 8048730:	01 7a 52             	add    %edi,0x52(%edx)
 8048733:	00 01                	add    %al,(%ecx)
 8048735:	7c 08                	jl     804873f <_IO_stdin_used+0xa3>
 8048737:	01 1b                	add    %ebx,(%ebx)
 8048739:	0c 04                	or     $0x4,%al
 804873b:	04 88                	add    $0x88,%al
 804873d:	01 00                	add    %eax,(%eax)
 804873f:	00 20                	add    %ah,(%eax)
 8048741:	00 00                	add    %al,(%eax)
 8048743:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048746:	00 00                	add    %al,(%eax)
 8048748:	98                   	cwtl   
 8048749:	fc                   	cld    
 804874a:	ff                   	(bad)  
 804874b:	ff 90 00 00 00 00    	call   *0x0(%eax)
 8048751:	0e                   	push   %cs
 8048752:	08 46 0e             	or     %al,0xe(%esi)
 8048755:	0c 4a                	or     $0x4a,%al
 8048757:	0f 0b                	ud2    
 8048759:	74 04                	je     804875f <_IO_stdin_used+0xc3>
 804875b:	78 00                	js     804875d <_IO_stdin_used+0xc1>
 804875d:	3f                   	aas    
 804875e:	1a 3b                	sbb    (%ebx),%bh
 8048760:	2a 32                	sub    (%edx),%dh
 8048762:	24 22                	and    $0x22,%al
 8048764:	1c 00                	sbb    $0x0,%al
 8048766:	00 00                	add    %al,(%eax)
 8048768:	40                   	inc    %eax
 8048769:	00 00                	add    %al,(%eax)
 804876b:	00 01                	add    %al,(%ecx)
 804876d:	fe                   	(bad)  
 804876e:	ff                   	(bad)  
 804876f:	ff 5c 00 00          	lcall  *0x0(%eax,%eax,1)
 8048773:	00 00                	add    %al,(%eax)
 8048775:	41                   	inc    %ecx
 8048776:	0e                   	push   %cs
 8048777:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804877d:	02 58 c5             	add    -0x3b(%eax),%bl
 8048780:	0c 04                	or     $0x4,%al
 8048782:	04 00                	add    $0x0,%al
 8048784:	1c 00                	sbb    $0x0,%al
 8048786:	00 00                	add    %al,(%eax)
 8048788:	60                   	pusha  
 8048789:	00 00                	add    %al,(%eax)
 804878b:	00 3d fe ff ff 3c    	add    %bh,0x3cfffffe
 8048791:	00 00                	add    %al,(%eax)
 8048793:	00 00                	add    %al,(%eax)
 8048795:	41                   	inc    %ecx
 8048796:	0e                   	push   %cs
 8048797:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804879d:	78 c5                	js     8048764 <_IO_stdin_used+0xc8>
 804879f:	0c 04                	or     $0x4,%al
 80487a1:	04 00                	add    $0x0,%al
 80487a3:	00 38                	add    %bh,(%eax)
 80487a5:	00 00                	add    %al,(%eax)
 80487a7:	00 80 00 00 00 64    	add    %al,0x64000000(%eax)
 80487ad:	fe                   	(bad)  
 80487ae:	ff                   	(bad)  
 80487af:	ff 61 00             	jmp    *0x0(%ecx)
 80487b2:	00 00                	add    %al,(%eax)
 80487b4:	00 41 0e             	add    %al,0xe(%ecx)
 80487b7:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80487bd:	87 03                	xchg   %eax,(%ebx)
 80487bf:	43                   	inc    %ebx
 80487c0:	0e                   	push   %cs
 80487c1:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80487c7:	83 05 4e 0e 30 02 48 	addl   $0x48,0x2300e4e
 80487ce:	0e                   	push   %cs
 80487cf:	14 41                	adc    $0x41,%al
 80487d1:	c3                   	ret    
 80487d2:	0e                   	push   %cs
 80487d3:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80487d6:	0e                   	push   %cs
 80487d7:	0c 41                	or     $0x41,%al
 80487d9:	c7                   	(bad)  
 80487da:	0e                   	push   %cs
 80487db:	08 41 c5             	or     %al,-0x3b(%ecx)
 80487de:	0e                   	push   %cs
 80487df:	04 10                	add    $0x10,%al
 80487e1:	00 00                	add    %al,(%eax)
 80487e3:	00 bc 00 00 00 98 fe 	add    %bh,-0x1680000(%eax,%eax,1)
 80487ea:	ff                   	(bad)  
 80487eb:	ff 02                	incl   (%edx)
 80487ed:	00 00                	add    %al,(%eax)
 80487ef:	00 00                	add    %al,(%eax)
 80487f1:	00 00                	add    %al,(%eax)
	...

080487f4 <__FRAME_END__>:
 80487f4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	40                   	inc    %eax
 8049f09:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	20                   	.byte 0x20
 8049f0d:	85 04 08             	test   %eax,(%eax,%ecx,1)

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	b4 83                	mov    $0x83,%ah
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 84       	or     $0x84000000,%eax
 8049f29:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	80 82 04 08 06 00 00 	addb   $0x0,0x60804(%edx)
 8049f5f:	00 d0                	add    %dl,%al
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	8e 00                	mov    (%eax),%es
 8049f6a:	00 00                	add    %al,(%eax)
 8049f6c:	0b 00                	or     (%eax),%eax
 8049f6e:	00 00                	add    %al,(%eax)
 8049f70:	10 00                	adc    %al,(%eax)
 8049f72:	00 00                	add    %al,(%eax)
 8049f74:	15 00 00 00 00       	adc    $0x0,%eax
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	40                   	inc    %eax
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 74 83 04          	add    %dh,0x4(%ebx,%eax,4)
 8049f9b:	08 11                	or     %dl,(%ecx)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 64 83 04          	add    %ah,0x4(%ebx,%eax,4)
 8049fa3:	08 12                	or     %dl,(%edx)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 10                	add    %dl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 24             	ljmp   *0x24(%edi)
 8049fb9:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 0e             	ljmp   *0xe(%edi)
 8049fc9:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	f6 83 04 08 06 84 04 	testb  $0x4,-0x7bf9f7fc(%ebx)
 804a013:	08 16                	or     %dl,(%esi)
 804a015:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a018:	26 84 04 08          	test   %al,%es:(%eax,%ecx,1)
 804a01c:	36 84 04 08          	test   %al,%ss:(%eax,%ecx,1)
 804a020:	46                   	inc    %esi
 804a021:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a024:	56                   	push   %esi
 804a025:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a028:	66                   	data16
 804a029:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .data:

0804a02c <__data_start>:
 804a02c:	00 00                	add    %al,(%eax)
	...

0804a030 <__dso_handle>:
 804a030:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a040 <stdout@@GLIBC_2.0>:
 804a040:	00 00                	add    %al,(%eax)
	...

0804a044 <completed.6591>:
 804a044:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804833c>
   a:	74 75                	je     81 <_init-0x8048333>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	38 2e                	cmp    %ch,(%esi)
  11:	34 2d                	xor    $0x2d,%al
  13:	32 75 62             	xor    0x62(%ebp),%dh
  16:	75 6e                	jne    86 <_init-0x804832e>
  18:	74 75                	je     8f <_init-0x8048325>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	34 2e                	xor    $0x2e,%al
  1f:	30 34 2e             	xor    %dh,(%esi,%ebp,1)
  22:	31 29                	xor    %ebp,(%ecx)
  24:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  27:	38 2e                	cmp    %ch,(%esi)
  29:	34 00                	xor    $0x0,%al
  2b:	47                   	inc    %edi
  2c:	43                   	inc    %ebx
  2d:	43                   	inc    %ebx
  2e:	3a 20                	cmp    (%eax),%ah
  30:	28 55 62             	sub    %dl,0x62(%ebp)
  33:	75 6e                	jne    a3 <_init-0x8048311>
  35:	74 75                	je     ac <_init-0x8048308>
  37:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  3a:	38 2e                	cmp    %ch,(%esi)
  3c:	32 2d 31 39 75 62    	xor    0x62753931,%ch
  42:	75 6e                	jne    b2 <_init-0x8048302>
  44:	74 75                	je     bb <_init-0x80482f9>
  46:	31 29                	xor    %ebp,(%ecx)
  48:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  4b:	38 2e                	cmp    %ch,(%esi)
  4d:	32 00                	xor    (%eax),%al
